from machine import Pin, ADC, PWM, I2C, SPI, Timer, TouchPad
from neopixel import NeoPixel
import time
from mPython import *
import framebuf

bmp_labplus0 = bytearray([\
#/* 0X22,0X01,0X0C,0X00,0X0C,0X00, */
0XF0,0XFC,0XFE,0XFE,0XFF,0XFF,0XFF,0XFF,
0XFE,0XFE,0XFC,0XF0,0X00,0X03,0X07,0X07,
0X0F,0X0F,0X0F,0X0F,0X07,0X07,0X03,0X00,
])

bmp_labplus1 = bytearray([\
# /* 0X22,0X01,0X2A,0X00,0X04,0X00, */
0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,
0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,
0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,
])

bmp_labplus2 = bytearray([\
# /* 0X22,0X01,0X80,0X00,0X40,0X00, */
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,
0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XE0,0XF0,0XF8,
0XF8,0XFC,0X7C,0X3E,0X3E,0X1F,0X1F,0X1F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,
0X0F,0X0F,0X0F,0X1F,0X1F,0X1F,0X3E,0X3E,0X7C,0XFC,0XF8,0XF8,0XF0,0XE0,0XC0,0X80,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XE0,0XF8,0XFE,0XFF,0X7F,0X1F,0X0F,0X07,0X83,
0X81,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,
0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X81,0X83,0X07,0X0F,0X1F,0X7F,
0XFF,0XFE,0XF8,0XE0,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XE0,0XFE,0XFE,
0XFC,0XFC,0XC4,0XC0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0XC0,0XC0,0XC0,
0XC0,0XC0,0XC0,0XC0,0XC0,0XC0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0XFC,0XFC,0XFC,
0X1C,0X1C,0X9C,0X9C,0X9C,0X1C,0X1C,0XFC,0XFC,0XFC,0XFC,0X00,0X00,0XC0,0XF8,0XFF,
0XFF,0XFE,0XFE,0XE2,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0XFC,0XFF,0XFF,0XFF,0XFF,0X03,0X00,0X00,0X00,0X07,0X8F,
0XDF,0XFF,0XFF,0XFE,0XFC,0XFE,0XFF,0XFF,0XDF,0X8F,0X07,0X00,0X00,0X00,0X00,0X00,
0X07,0X8F,0XDF,0XFF,0XFF,0XFE,0XFC,0XFE,0XFF,0XFF,0XDF,0X8F,0X07,0X00,0X00,0X00,
0X03,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X80,0X88,0X8E,0X9F,0XBF,0X9F,0X87,
0X83,0X83,0X83,0X83,0X83,0X83,0X83,0XFF,0XFF,0XFF,0XFF,0X83,0X83,0X83,0X83,0X83,
0X83,0X83,0X83,0X83,0X83,0X83,0X83,0X80,0X80,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,
0X00,0X00,0XFF,0XFF,0XFF,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0X7C,0XFF,0X7F,0XFF,0XFF,
0XFF,0X81,0X01,0X01,0X01,0XC1,0XFF,0XFF,0XFF,0X7F,0X01,0X01,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X06,0X0F,
0X0F,0X0F,0X07,0X03,0X01,0X03,0X07,0X0F,0X0F,0X0F,0X0F,0X00,0X00,0X00,0X00,0X00,
0X0F,0X0F,0X0F,0X0F,0X07,0X03,0X01,0X03,0X07,0X0F,0X0F,0X0F,0X06,0X00,0X00,0X00,
0XE0,0XFF,0XFF,0XFF,0XFF,0X1F,0X00,0X00,0X00,0X07,0X07,0X07,0X07,0X07,0X07,0X07,
0X07,0X07,0X87,0XC7,0XE7,0XFF,0XFF,0XFF,0X3F,0X1F,0X7F,0XFF,0XFF,0XF7,0XC7,0X87,
0X07,0X07,0X07,0X07,0X07,0X07,0X07,0X07,0X07,0X00,0X00,0X00,0X00,0X1F,0X1F,0X1F,
0X00,0XC0,0XFF,0XFF,0XFF,0XE0,0XC0,0X9F,0X1F,0X1F,0X1F,0X00,0X00,0X00,0X03,0X1F,
0XFF,0XFF,0XFC,0XF8,0XFC,0XFF,0X3F,0X0F,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X0F,0X3F,0X7F,0XFF,0XFC,0XF8,0XF0,0XE0,
0XC0,0X80,0X00,0X00,0X00,0X30,0X78,0X7C,0X7E,0X3E,0X3E,0X1E,0X1E,0X1E,0X1E,0X1E,
0X3E,0X3E,0X7E,0X7C,0X78,0X30,0X00,0X00,0X00,0X80,0XC0,0XE0,0XF0,0XF8,0XFC,0XFF,
0X7F,0X3F,0X0F,0X03,0X00,0X00,0X00,0X00,0X00,0X10,0X30,0X78,0XF8,0X7C,0X7C,0X3E,
0X3F,0X1F,0X0F,0X0F,0X07,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X07,0X0F,
0X1F,0X3F,0X3E,0X7C,0X78,0XF8,0X70,0X30,0X10,0X00,0X00,0X00,0X20,0X70,0XF8,0X7C,
0X3F,0X1F,0X07,0X03,0X01,0X03,0X07,0X0F,0X3F,0X1E,0X1C,0X78,0XFC,0X7C,0X7E,0X3F,
0X1F,0X0F,0X0F,0X07,0X0F,0X1F,0X3F,0X3E,0X7C,0XFC,0X78,0X10,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X07,0X0F,
0X0F,0X1F,0X1F,0X3E,0X3E,0X7C,0X7C,0X7C,0XF8,0XF8,0XF8,0XF8,0XF8,0XF8,0XF8,0XF8,
0XF8,0XF8,0XF8,0X7C,0X7C,0X7C,0X3E,0X3E,0X1F,0X1F,0X0F,0X0F,0X07,0X03,0X01,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
])


'''
fb1 = framebuf.FrameBuffer(bmp_labplusA,28,64, framebuf.MONO_VLSB)
display.blit(fb1,96,0)
display.show()
'''

#mPython.buzz = PWM(Pin(16), freq = 500, duty = 0)
touchPad_P = TouchPad(Pin(27))
touchPad_Y = TouchPad(Pin(14))
touchPad_T = TouchPad(Pin(12))
touchPad_H = TouchPad(Pin(13))
touchPad_O = TouchPad(Pin(15))
touchPad_N = TouchPad(Pin(4))

# 按键引脚初始化
BTNA = Pin(0, mode=Pin.OPEN_DRAIN,pull=Pin.PULL_UP,value=1)
BTNB = Pin(2, mode=Pin.OPEN_DRAIN,pull=Pin.PULL_UP,value=1)

# pixles
color_index = 0
color = ((32, 0, 0), (0, 32, 0), (0, 0, 32),(0, 0, 0))

def Rgb_Neopixel():
  global color_index,color
  for i in range(0, 3):
    rgb[i] = color[color_index]
  rgb.write()
  color_index = color_index + 1
  color_index = color_index % 3


def Rgb_Neopixel_0():
  global color_index,color
  for i in range(0, 1):
    rgb[i] = color[color_index]
  rgb.write()
  color_index = color_index + 1
  color_index = color_index % 3

def Rgb_Neopixel_2():
  global color_index,color
  for i in range(2, 3):
    rgb[i] = color[color_index]
  rgb.write()
  color_index = color_index + 1
  color_index = color_index % 3

BTNA = Pin(0, mode=Pin.OPEN_DRAIN,pull=Pin.PULL_UP,value=1)
BTNB = Pin(2, mode=Pin.OPEN_DRAIN,pull=Pin.PULL_UP,value=1)

buzz.on()
time.sleep_ms(100)
buzz.off()
T = 200
loc = 0
X = 0
Y = 42
a = 1
b = 1
ref = 0
start_flag = False
Start = True
while True:
  if Start:
    if accelerometer.get_y()*1000 >= 150 :
      start_flag = True
      loc = loc - 2
      if loc < 0:
        loc = 0
    if accelerometer.get_y()*1000 <= -150 :
      start_flag = True
      loc = loc + 2
      if loc > 86:
        loc = 86
    if start_flag:
      X = X + a
      Y = Y + b
      if X >= 116:
        a = a * -1
      if X <= 0:
        a = a * -1
      if Y >= 43:
        b = b * -1
      if Y <= 0:
        b = b * -1
      if Y >= 43:
        if X > loc + 45 or X < loc-10:
          buzz.on()
          time.sleep_ms(100)
          buzz.off()
          start_flag = False
          Start = False
    display.fill(0)
    fb1 = framebuf.FrameBuffer(bmp_labplus1,42,4, framebuf.MONO_VLSB)
    display.blit(fb1,loc,55)
    fb1 = framebuf.FrameBuffer(bmp_labplus0,12,12, framebuf.MONO_VLSB)
    display.blit(fb1,X,Y)
    display.show()
  else:
    display.fill(0)
    fb1 = framebuf.FrameBuffer(bmp_labplus2,128,64, framebuf.MONO_VLSB)
    display.blit(fb1,0,0)
    display.show()
'''
    ref = ref + 1
    if ref >= 8:
      ref = 0
'''














